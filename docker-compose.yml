name: "attune"
services:
  controlplane:
    build: ./controlplane
    ports:
      - "3000:3000"
    env_file: ./.env
    environment:
      - ATTUNE_DATABASE_URL=postgres://attune:attune@postgres:5432/attune
      - AWS_ENDPOINT_URL_S3=http://minio:9000
    depends_on:
      - postgres
      - minio
    networks:
      - dev
  postgres:
    image: postgres:17.4-bookworm
    environment:
      - POSTGRES_USER=attune
      - POSTGRES_PASSWORD=attune
      - POSTGRES_DB=attune
    ports:
      - "5432:5432"
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      - ./controlplane/migrations:/docker-entrypoint-initdb.d
    networks:
      - dev
  minio:
    build: ./docker/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=attuneminio
      - MINIO_ROOT_PASSWORD=attuneminio
      # This MINIO_DOMAIN variable needs to be set to the hostname that you're
      # using to access MinIO. From containers within the Docker Compose
      # network, this is `minio`. However, if you're developing the control
      # plane on your host machine and just using Docker Compose to run the
      # backing services, you're probably going to be accessing MinIO at
      # `localhost`, so you'll need to set MINIO_DOMAIN to `localhost`.
      - MINIO_DOMAIN=minio
      # - MINIO_DOMAIN=localhost
    volumes:
      - ./minio-data:/data
    networks:
      dev:
        aliases:
          # By default, subdomains are not resolved to the service. Here, we
          # explicitly add the subdomain of the S3 bucket because we're using
          # vhost-style S3 requests.
          - attune-dev-0.minio

networks:
  dev:
