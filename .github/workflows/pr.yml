# Workflows that run on pull requests. These are primarily CI checks for
# linting, formatting, testing, etc.
name: PR

on:
  pull_request:
    branches: [main]
    paths-ignore:
      - "**/*.md"
      - "**/*.txt"
      - "**/*.json"
      - "**/*.lock"
      - "**/.gitignore"
      - "**/LICENSE"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  rust:
    name: Build, check, and test Rust
    runs-on: ubuntu-latest
    env:
      ATTUNE_DATABASE_URL: postgresql://attune:attune@localhost:5432/attune
    services:
      postgres:
        image: postgres:17.4-bookworm
        env:
          POSTGRES_USER: attune
          POSTGRES_PASSWORD: attune
          POSTGRES_DB: attune
        ports:
          - "5432:5432"
    steps:
      # Since these installation steps don't require checkout, technically we
      # could do them ahead of time and just cache the resulting image.
      # Unfortunately, this is actually sometimes _slower_ in GHA because then
      # you're using a custom image instead of a runner image that's always hot
      # on the node.
      #
      # If you decide to make this change, make sure to benchmark whether it's
      # actually faster.
      - name: Install Rust
        run: rustup show

      # These should match `../docker/attune/Dockerfile`.
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgpg-error-dev libgpgme-dev pkg-config

      - uses: actions/checkout@v4

      - name: Remove empty EE crate
        run: rm -r ./packages/attune-ee

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2.8.0
        with:
          cache-workspace-crates: true
          cache-all-crates: true

      - name: Check format
        run: cargo fmt --all --check

      - name: Migrate and check database
        working-directory: ./docker/migrate
        run: |
          npm install
          # TODO: Figure out how to test the RDS migration script.
          npm run build
          npm run fmt:check
          npm run migrate
          npm run diff

      - name: Install sqlx-cli
        uses: taiki-e/install-action@v2
        with:
          tool: sqlx-cli

      - name: Check sqlx queries
        run: cargo sqlx prepare --workspace --check -- --tests

      - name: Check build
        run: cargo check --workspace --all-targets --all-features

      - name: Check clippy
        run: cargo clippy --workspace --all-targets --all-features -- -D warnings

      - name: Run tests
        run: cargo test --workspace --all-targets --all-features -- --skip smoke

      - name: Run full build
        run: cargo build --workspace --all-targets --all-features

  dev:
    name: Set up Attune locally and run smoke tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        run: rustup show

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgpg-error-dev libgpgme-dev pkg-config

      - name: Remove empty EE crate
        run: rm -r ./packages/attune-ee

      - name: Set up environment
        run: cp .env.example .env

      - name: Start services
        run: |
          docker compose up -d
          # Wait for services to be healthy
          timeout 300 bash -c 'until docker compose ps | grep -q "healthy"; do sleep 5; done'

      - name: Build CLI
        run: cargo build --release --bin attune

      - name: Run smoke tests
        env:
          ATTUNE_CLI_PATH: ${{ github.workspace }}/target/release/attune
          ATTUNE_API_ENDPOINT: http://localhost:3000
          ATTUNE_API_TOKEN: INSECURE_TEST_TOKEN
        run: cargo test --test smoke

      - name: Stop services
        if: always()
        run: docker compose down
