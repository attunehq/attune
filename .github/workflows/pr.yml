# Workflows that run on pull requests. These are primarily CI checks for
# linting, formatting, testing, etc.
name: PR

on:
  pull_request:
    branches: [main]
    paths-ignore:
      - "**/*.md"
      - "**/*.txt"
      - "**/*.json"
      - "**/*.lock"
      - "**/.gitignore"
      - "**/LICENSE"

env:
  CARGO_TERM_COLOR: always

jobs:
  ci:
    name: Build, check, and test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        run: rustup show

      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Remove empty EE crate
        run: rm -r ./packages/attune-ee

      - name: Check format
        run: cargo fmt --all --check

      - name: Check build
        run: cargo check --workspace --all-targets --all-features

      - name: Check clippy
        run: cargo clippy --workspace --all-targets --all-features -- -D warnings

      - name: Run tests
        run: cargo test --workspace --all-targets --all-features --exclude smoke

      - name: Run full build
        run: cargo build --workspace --all-targets --all-features

  dev:
    name: Set up Attune locally and run smoke tests
    runs-on: ubuntu-latest
    needs: ci  # Wait for main CI to pass.
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.1'

      - name: Set up environment
        run: cp .env.example .env

      - name: Start services
        run: |
          docker compose up -d
          # Wait for services to be healthy
          timeout 300 bash -c 'until docker compose ps | grep -q "healthy"; do sleep 5; done'

      - name: Build CLI
        run: |
          cd cli
          go install ./...

      - name: Run smoke tests
        env:
          ATTUNE_CLI_PATH: ${{ env.HOME }}/go/bin/attune
        run: cargo test --test smoke

      - name: Stop services
        if: always()
        run: docker compose down

# TODO: Add a job (maybe called `setup` or `onboarding`?) that literally
# performs the onboarding/setup/quickstart instructions we've documented to
# make sure they actually work as expected.
