# Workflows that run on tags. These are primarily CD tasks for cutting
# production release builds.
name: Tag

on:
  push:
    tags: ["v*"]
    paths-ignore:
      - "**/*.md"
      - "**/*.txt"
      - "**/*.json"
      - "**/*.lock"
      - "**/.gitignore"
      - "**/LICENSE"

env:
  CARGO_TERM_COLOR: always
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  publish:
    name: Build and publish draft release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Build and test binaries.
      - name: Install Rust
        run: rustup show

      - name: Remove empty EE crate
        run: rm -r ./packages/attune-ee

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2
        with:
          cache-workspace-crates: true
          cache-all-crates: true

      - name: Build binaries
        run: cargo build --workspace --all-targets --all-features --release

      - name: Run tests
        run: cargo test --workspace --all-targets --all-features --release

      # Publish GitHub pre-release.
      - name: Copy and rename release assets
        run: |
          mkdir -p /tmp/release
          cp target/release/attune /tmp/release/attune-${{ github.ref_name }}_${{ runner.os }}-${{ runner.arch }}
          cp target/release/attune-server /tmp/release/attune-server-${{ github.ref_name }}_${{ runner.os }}-${{ runner.arch }}

      - name: Upload release assets
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          preserve_order: true
          generate_release_notes: true
          files: /tmp/release/*

      # Publish Docker image.
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: docker-metadata
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: docker-build-and-push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./docker/attune/Dockerfile
          push: true
          tags: ${{ steps.docker-metadata.outputs.tags }}
          labels: ${{ steps.docker-metadata.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.docker-build-and-push.outputs.digest }}
          push-to-registry: true
