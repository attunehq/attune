# Workflows that run on pushes to the main branch. These are primarily CD tasks
# for cutting development release builds.
name: Main

on:
  push:
    branches: [main]
    paths-ignore:
      - "**/*.md"
      - "**/*.txt"
      - "**/*.json"
      - "**/*.lock"
      - "**/.gitignore"
      - "**/LICENSE"

env:
  CARGO_TERM_COLOR: always
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  cd:
    name: Build commit
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write
    steps:
      - uses: actions/checkout@v4

      # Run tests
      - name: Install Rust
        run: rustup show

      - name: Remove empty EE crate
        run: rm -r ./packages/attune-ee

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2.8.0
        with:
          cache-workspace-crates: true
          cache-all-crates: true

      - name: Run tests
        run: cargo test --workspace --all-targets --all-features --release

      # Build binaries.
      - name: Build binaries
        run: cargo build --workspace --all-targets --all-features --release

      # Build and push Docker image.
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: docker-metadata
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: docker-build-and-push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./docker/attune/Dockerfile
          push: true
          tags: ${{ steps.docker-metadata.outputs.tags }}
          labels: ${{ steps.docker-metadata.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.docker-build-and-push.outputs.digest }}
          push-to-registry: true

      # Upload binaries.
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: attune-${{ runner.os }}_${{ runner.arch }}_${{ github.sha }}
          path: |
            target/release/attune-server
          if-no-files-found: error
